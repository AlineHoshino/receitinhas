{"version":3,"sources":["context/myContext.js","images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","services/APIrequest.js","images/profileIcon.svg","services/funcAuxHeader.js","images/chapeuchef543.png","images/LogoLanchinho-logo.png","images/drinkIcon.svg","images/mealIcon.svg","images/exploreIcon.svg","images/searchIcon.svg","components/Header.jsx","context/provider.js","pages/Login.jsx","components/Loading.jsx","services/funcAuxDetails.js","pages/DetalheComidas.jsx","pages/DetalheBebidas.jsx","components/Footer.jsx","components/ExploreAliment.jsx","components/ExploreIng.jsx","components/Profile.jsx","pages/Perfil.jsx","components/ButtonsRecipes.jsx","components/CardFavorite.jsx","components/Filters.jsx","components/Card.jsx","services/createCard.js","pages/TelaBebidas.jsx","pages/indexPages.js","pages/Explorar.jsx","pages/ExplorarComidas.jsx","pages/ExplorarBebidas.jsx","pages/ExplorarComidasArea.jsx","pages/IngredienteBebidas.jsx","pages/IngredenteComidas.jsx","pages/ReceitasFavoritas.jsx","pages/ReceitasFeitas.jsx","pages/ReceitasProcessosBebidas.jsx","pages/ReceitasProcessosComidas.jsx","pages/TelaComidas.jsx","App.js","serviceWorker.js","index.js"],"names":["MyContext","createContext","module","exports","foodAPIRequest","a","param1","param2","param3","url","fetch","then","result","json","meals","console","log","cocktailsAPIRequest","url2","drinks","alert","filterByClickFood","radioFilter","inputFilter","setInputFilter","setDataFood","foodRequestI","global","foodRequestS","foodRequestF","filterByClickDrink","setDataDrink","drinkRequestI","drinkRequestS","drinkRequestF","Header","pageName","hasLupa","useState","hidden","setHidden","setRadioFilter","useContext","handleFiltersChange","target","type","value","filtersType","length","searchInput","className","data-testid","onChange","name","htmlFor","id","onClick","withSearchIMG","to","src","profileIcon","alt","searchIcon","withoutSearchIMG","Provider","children","dataFood","dataDrink","categoryFood","setCategoryFood","categoryDrink","setCategoryDrink","category","btnState","setBtnState","useEffect","categoryFoodRequest","drink","categoryDrinkRequest","contextValue","Login","history","email","setStateEmail","password","setStatePassword","chapeu","logo","disabled","passwordCorrect","test","validateEmail","emailStore","localStorage","setItem","JSON","stringify","push","Loading","getAPIdataID","setAlimentoDetail","tipo","drinkRequest","foodRequest","alimentoRequest","alimentosSugestions","setAlimentoDetails","tipoSugerido","SIX","food","alimentoSix","slice","btnContinuar","getItem","cocktails","parse","Object","keys","some","chave","btnFavoritar","setBtnFavorite","ingredientMeasures","obj","keysOfApi","filter","includes","map","measure","ingredient","ingred","changeLocalRecipe","tipo1","tipo2","recipes","changeLocalFavorite","favInfo","btnFavorite","favs","unFav","element","copy","navigator","clipboard","readText","clipText","DetalheComidas","match","params","foodDetail","setfoodDetail","drinksDetails","setDrinkDetails","isHidden","setIsHidden","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","strMeal","strCategory","strInstructions","strMealThumb","strYoutube","strArea","area","alcoholicOrNot","image","width","height","Share","BlackHeart","Heart","ingredients","measures","i","receitasIngMeas","key","title","replace","frameBorder","allow","allowFullScreen","strDrinkThumb","strDrink","strDrikCategory","DetalheBebidas","drinkDetail","setDrinkDetail","foodsDetails","setFoodsDetails","strAlcoholic","strMealCategory","Footer","explore","meal","ExploreAliment","getRandom","setGetRandom","cocktailsRequest","alimentoRandomico","idRandom","idMeal","idDrink","fetchAlimentoRandomico","ExploreIng","ingredientes","setIngredientes","TWELVE","ingFoodRequest","ingDrinkRequest","twelveIng","ing","fetchIng","ingredientTipo","siteAlimento","lenght","index","Profile","user","clear","ButtonsRecipes","CardFavorite","setFavs","fav","Filters","alimento","fifthFirst","Number","buttonAll","handleClick","Card","idAlimento","rota","pathname","state","createCard","array","twelve","twelveFirst","pages","Explorar","ExplorarComidas","ExplorarBebidas","ExplorarComidasArea","IngredienteBebidas","IngredienteComidas","Perfil","ReceitasFavoritas","ReceitasFeitas","ReceitasProcessosBebidas","checkedState","setCheckedState","undefined","changeCheckBox","checked","localGet","ingredientsList","listFilter","changeLocalCheckDrink","every","ReceitasProcessosComidas","changeLocalCheckFood","TelaBebidas","firstRender","useRef","current","fetchCategoryDrink","ApiCategoryDrink","TelaComidas","fetchCategoryFood","ApiCategoryFood","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc892a10.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","export const foodAPIRequest = async (\n  param1 = 'search',\n  param2 = 's=',\n  param3 = '?') => {\n  try {\n    const url = `https://www.themealdb.com/api/json/v1/1/${param1}.php${param3}${param2}`;\n    const { meals } = await fetch(url).then((result) => result.json());\n    return meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const cocktailsAPIRequest = async (\n  param1 = 'search',\n  param2 = 's=',\n  param3 = '?') => {\n  try {\n    const url2 = `https://www.thecocktaildb.com/api/json/v1/1/${param1}.php${param3}${param2}`;\n    const { drinks } = await fetch(url2).then((result) => result.json());\n    return drinks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","import { cocktailsAPIRequest, foodAPIRequest } from './APIrequest';\n\nconst alert = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\nexport const filterByClickFood = async (\n  radioFilter, inputFilter, setInputFilter, setDataFood,\n) => {\n  if (radioFilter === 'ingrediente') {\n    const foodRequestI = await foodAPIRequest('filter', `i=${inputFilter}`);\n    if (foodRequestI === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataFood(foodRequestI);\n    }\n  }\n\n  if (radioFilter === 'nome') {\n    const foodRequestS = await foodAPIRequest('search', `s=${inputFilter}`);\n    if (foodRequestS === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataFood(foodRequestS);\n    }\n  }\n\n  if (radioFilter === 'primeira-letra') {\n    const foodRequestF = await foodAPIRequest('search', `f=${inputFilter}`);\n    if (foodRequestF === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataFood(foodRequestF);\n    }\n  }\n};\n\nexport const filterByClickDrink = async (\n  radioFilter, inputFilter, setInputFilter, setDataDrink,\n) => {\n  if (radioFilter === 'ingrediente') {\n    const drinkRequestI = await cocktailsAPIRequest('filter', `i=${inputFilter}`);\n    if (drinkRequestI === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataDrink(drinkRequestI);\n    }\n  }\n\n  if (radioFilter === 'nome') {\n    const drinkRequestS = await cocktailsAPIRequest('search', `s=${inputFilter}`);\n    if (drinkRequestS === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataDrink(drinkRequestS);\n    }\n  }\n\n  if (radioFilter === 'primeira-letra') {\n    const drinkRequestF = await cocktailsAPIRequest('search', `f=${inputFilter}`);\n    if (drinkRequestF === null) {\n      setInputFilter('');\n      global.alert(alert);\n    } else {\n      setInputFilter('');\n      setDataDrink(drinkRequestF);\n    }\n  }\n};\n","module.exports = __webpack_public_path__ + \"static/media/chapeuchef543.2c1eaa27.png\";","module.exports = __webpack_public_path__ + \"static/media/LogoLanchinho-logo.cca26527.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport MyContext from '../context/myContext';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport { filterByClickFood, filterByClickDrink } from '../services/funcAuxHeader';\n\nconst Header = ({ pageName, hasLupa }) => {\n  const [hidden, setHidden] = useState(true);\n  const [inputFilter, setInputFilter] = useState('');\n  const [radioFilter, setRadioFilter] = useState('');\n  const { setDataFood, setDataDrink } = useContext(MyContext);\n\n  const handleFiltersChange = ({ target: { type, value } }) => {\n    const filtersType = (type === 'text')\n      ? setInputFilter(value) : setRadioFilter(value);\n\n    if (radioFilter === 'primeira-letra'\n        && type === 'text' && value.length > 1) {\n      return global.alert('Sua busca deve conter somente 1 (um) caracter')\n        && setInputFilter('');\n    }\n    return filtersType;\n  };\n\n  const showSearchBar = () => {\n    setHidden(!hidden);\n  };\n\n  const setSelectedFilter = () => {\n    if (pageName === 'Comidas') {\n      filterByClickFood(radioFilter, inputFilter, setInputFilter, setDataFood);\n    } else {\n      filterByClickDrink(radioFilter, inputFilter, setInputFilter, setDataDrink);\n    }\n  };\n\n  const searchInput = (\n    <>\n      <input\n        className=\"searchInput\"\n        data-testid=\"search-input\"\n        type=\"text\"\n        onChange={ handleFiltersChange }\n        name=\"input-text\"\n      />\n      <label htmlFor=\"ingredient-search-radio\">\n        <input\n          name=\"searchOpt\"\n          type=\"radio\"\n          id=\"ingredient-search-radio\"\n          data-testid=\"ingredient-search-radio\"\n          value=\"ingrediente\"\n          onChange={ handleFiltersChange }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"name-search-radio\">\n        <input\n          name=\"searchOpt\"\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          id=\"name-search-radio\"\n          value=\"nome\"\n          onChange={ handleFiltersChange }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"first-letter-search-radio\">\n        <input\n          name=\"searchOpt\"\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"first-letter-search-radio\"\n          value=\"primeira-letra\"\n          onChange={ handleFiltersChange }\n        />\n        Primeira letra\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ setSelectedFilter }\n      >\n        Buscar\n      </button>\n    </>\n  );\n\n  const withSearchIMG = (\n    <>\n      <nav className=\"header\">\n        <Link to=\"/perfil\">\n          <img\n            className=\"profile-icon\"\n            src={ profileIcon }\n            alt=\"profile\"\n            data-testid=\"profile-top-btn\"\n          />\n        </Link>\n        <h2 data-testid=\"page-title\" className=\"title\">{ pageName }</h2>\n        <button className=\"lupa\" type=\"button\" onClick={ showSearchBar }>\n          <img\n            data-testid=\"search-top-btn\"\n            src={ searchIcon }\n            alt=\"lupa\"\n          />\n        </button>\n      </nav>\n      { hidden ? null : searchInput }\n    </>\n  );\n\n  const withoutSearchIMG = (\n    <nav className=\"header-2\">\n      <Link to=\"/perfil\">\n        <img\n          className=\"profile-icon\"\n          src={ profileIcon }\n          alt=\"profile\"\n          data-testid=\"profile-top-btn\"\n        />\n      </Link>\n      <h2 data-testid=\"page-title\" className=\"title\">{ pageName }</h2>\n    </nav>\n  );\n\n  return (\n    hasLupa ? withSearchIMG : withoutSearchIMG\n  );\n};\n\nHeader.propTypes = {\n  pageName: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport MyContext from './myContext';\nimport { foodAPIRequest, cocktailsAPIRequest } from '../services/APIrequest';\n\nconst Provider = ({ children }) => {\n  const [dataFood, setDataFood] = useState([]);\n  const [dataDrink, setDataDrink] = useState([]);\n  const [categoryFood, setCategoryFood] = useState([]);\n  const [categoryDrink, setCategoryDrink] = useState([]);\n  const [btnState, setBtnState] = useState({ category: '' });\n  // const [isFiltered, setIsFiltered] = useState(false);\n\n  useEffect(() => {\n    const categoryFoodRequest = async () => {\n      const category = await foodAPIRequest('list', 'c=list');\n      setCategoryFood(category);\n    };\n    categoryFoodRequest();\n  }, []);\n\n  useEffect(() => {\n    const categoryDrinkRequest = async () => {\n      const drink = await cocktailsAPIRequest('list', 'c=list');\n      setCategoryDrink(drink);\n    };\n    categoryDrinkRequest();\n  }, []);\n\n  const contextValue = {\n    dataFood,\n    setDataFood,\n    dataDrink,\n    setDataDrink,\n    categoryFood,\n    setCategoryFood,\n    categoryDrink,\n    setCategoryDrink,\n    btnState,\n    setBtnState,\n    // isFiltered,\n    // setIsFiltered,\n  };\n\n  return (\n    <MyContext.Provider value={ contextValue }>{children}</MyContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default Provider;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport chapeu from '../images/chapeuchef543.png';\nimport logo from '../images/LogoLanchinho-logo.png';\n\nconst Login = ({ history }) => {\n  const [email, setStateEmail] = useState('');\n  const [password, setStatePassword] = useState('');\n\n  function handleChange({ target: { value } }) {\n    setStateEmail(value);\n  }\n\n  function handleChange2({ target: { value } }) {\n    setStatePassword(value);\n  }\n\n  const validateEmail = () => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    const passwordMin = 7;\n    const passwordCorrect = password.length >= passwordMin;\n    return re.test(email) && passwordCorrect;\n  };\n\n  const handleClick = () => {\n    const emailStore = {\n      email,\n    };\n    localStorage.setItem('user', JSON.stringify(emailStore));\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n    history.push('/comidas');\n  };\n\n  return (\n    <>\n      <img className=\"chapeu-img\" src={ chapeu } alt=\"chapeuchef\" />\n      <div className=\"login-box\">\n        <img className=\"h2\" src={ logo } alt=\"logo\" />\n        <input\n          type=\"email\"\n          name=\"email\"\n          data-testid=\"email-input\"\n          onChange={ handleChange }\n          value={ email }\n        />\n        <input\n          type=\"password\"\n          data-testid=\"password-input\"\n          name=\"password\"\n          onChange={ handleChange2 }\n          value={ password }\n        />\n        <button\n          className=\"button-login\"\n          disabled={ !(validateEmail()) }\n          data-testid=\"login-submit-btn\"\n          type=\"submit\"\n          onClick={ handleClick }\n        >\n          Entrar\n        </button>\n      </div>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default Login;\n","import React from 'react';\n\nconst Loading = () => (\n  <div>\n    <p>Loading...</p>\n  </div>\n);\n\nexport default Loading;\n","import copy from 'clipboard-copy';\nimport { foodAPIRequest, cocktailsAPIRequest } from './APIrequest';\n\nexport const getAPIdataID = async (id, setAlimentoDetail, tipo) => {\n  const drinkRequest = await cocktailsAPIRequest('lookup', `i=${id}`);\n  const foodRequest = await foodAPIRequest('lookup', `i=${id}`);\n\n  const alimentoRequest = tipo === 'food' ? foodRequest : drinkRequest;\n\n  setAlimentoDetail(...alimentoRequest);\n};\n\nexport const alimentosSugestions = async (setAlimentoDetails, tipoSugerido) => {\n  const SIX = 6;\n  const drink = await cocktailsAPIRequest();\n  const food = await foodAPIRequest();\n  const alimento = tipoSugerido === 'meals' ? food : drink;\n  const alimentoSix = alimento.slice(0, SIX);\n  setAlimentoDetails(alimentoSix);\n};\n\nexport const btnContinuar = (id, setBtnState, tipo) => {\n  if (localStorage.getItem('inProgressRecipes') === null) {\n    localStorage.setItem('inProgressRecipes', JSON\n      .stringify({ meals: {}, cocktails: {} }));\n  }\n  const test = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const chaves = Object.keys(test[tipo]).some((chave) => chave === id);\n\n  if (chaves) {\n    setBtnState('Continuar Receita');\n  }\n};\nexport const btnFavoritar = (id, setBtnFavorite) => {\n  if (localStorage.getItem('favoriteRecipes') === null) {\n    localStorage.setItem('favoriteRecipes', JSON\n      .stringify([]));\n  }\n  const testFav = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const chavesFav = testFav.some((chave) => chave.id === id);\n\n  if (chavesFav) {\n    setBtnFavorite('isFavorite');\n  }\n};\n\nexport const ingredientMeasures = (obj, tipo) => {\n  const keysOfApi = Object.keys(obj);\n  if (tipo === 'medidas') {\n    const measurementKeys = keysOfApi.filter((chave) => chave.includes('strMeasure'))\n      .map((measure) => obj[measure])\n      .filter((measure) => measure !== ' ' && measure !== null && measure !== '');\n    return measurementKeys;\n  }\n  if (tipo === 'ingredientes') {\n    const ingredientsKeys = keysOfApi.filter((chave) => chave.includes('strIngredient'));\n    const ingredientsValues = ingredientsKeys\n      .map((ingredient) => obj[ingredient])\n      .filter((ingred) => ingred !== '' && ingred !== null && ingred !== '');\n    return ingredientsValues;\n  }\n};\n\nexport const changeLocalRecipe = (id, tipo1, tipo2) => {\n  if (localStorage.getItem('inProgressRecipes') === null) {\n    localStorage.setItem('inProgressRecipes', JSON\n      .stringify({ [tipo1]: { [id]: [] }, [tipo2]: {} }));\n  } else if (!JSON.parse(localStorage.getItem('inProgressRecipes'))[tipo1][id]) {\n    const recipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    localStorage.setItem('inProgressRecipes', JSON\n      .stringify({ ...recipes, [tipo1]: { ...recipes[tipo1], [id]: [] } }));\n  }\n};\n\nexport const changeLocalFavorite = (favInfo, btnFavorite, setBtnFavorite, id) => {\n  if (localStorage.getItem('favoriteRecipes') === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favInfo]));\n  }\n\n  const favs = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const unFav = favs.filter((element) => element.id !== id);\n\n  if (btnFavorite === 'isNotFavorite') {\n    copy('isFavorite');\n    localStorage.setItem('favoriteRecipes', JSON\n      .stringify([...favs, favInfo]));\n  } else {\n    copy('isNotFavorite');\n    localStorage.setItem('favoriteRecipes', JSON.stringify(unFav));\n  }\n  navigator.clipboard.readText().then(\n    (clipText) => setBtnFavorite(clipText),\n  );\n};\n\nexport const changeLocalCheckDrink = (name, checked, id, checkedState) => {\n  const localGet = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (localGet && localGet.cocktails[id]) {\n    const ingredientsList = localGet.cocktails[id];\n    if (checked) {\n      localGet.cocktails[id] = [...ingredientsList, name];\n      localStorage.setItem('inProgressRecipes', JSON.stringify(localGet));\n      return ([...checkedState, name]);\n    }\n    const listFilter = ingredientsList.filter((ingredient) => ingredient !== name);\n    localGet.cocktails[id] = listFilter;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(localGet));\n    return (listFilter);\n  }\n};\n\nexport const changeLocalCheckFood = (name, checked, id, checkedState) => {\n  const localGet = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (localGet && localGet.meals[id]) {\n    const ingredientsList = localGet.meals[id];\n    if (checked) {\n      localGet.meals[id] = [...ingredientsList, name];\n      localStorage.setItem('inProgressRecipes', JSON.stringify(localGet));\n      return ([...checkedState, name]);\n    }\n    const listFilter = ingredientsList.filter((ingredient) => ingredient !== name);\n    localGet.meals[id] = listFilter;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(localGet));\n    return (listFilter);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport copy from 'clipboard-copy';\nimport Loading from '../components/Loading';\nimport Share from '../images/shareIcon.svg';\nimport Heart from '../images/whiteHeartIcon.svg';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport BlackHeart from '../images/blackHeartIcon.svg';\nimport {\n  btnContinuar,\n  btnFavoritar,\n  ingredientMeasures,\n  changeLocalRecipe,\n  changeLocalFavorite,\n  getAPIdataID,\n  alimentosSugestions } from '../services/funcAuxDetails';\n\nconst DetalheComidas = ({ match: { params: { id }, url }, history }) => {\n  const [foodDetail, setfoodDetail] = useState([]);\n  const [drinksDetails, setDrinkDetails] = useState([]);\n  const [btnState, setBtnState] = useState('Iniciar Receita');\n  const [btnFavorite, setBtnFavorite] = useState('isNotFavorite');\n  const [isHidden, setIsHidden] = useState(true);\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    arrows: true,\n  };\n\n  useEffect(() => {\n    alimentosSugestions(setDrinkDetails, 'cocktails');\n    getAPIdataID(id, setfoodDetail, 'food');\n\n    btnContinuar(id, setBtnState, 'meals');\n    btnFavoritar(id, setBtnFavorite);\n  }, []);\n\n  const {\n    strMeal,\n    strCategory,\n    strInstructions,\n    strMealThumb,\n    strYoutube,\n    strArea,\n  } = foodDetail;\n\n  const handleRecipe = () => {\n    changeLocalRecipe(id, 'meals', 'cocktails');\n    history.push(`/comidas/${id}/in-progress`);\n  };\n\n  const favInfo = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n  const handleFavorite = () => {\n    changeLocalFavorite(favInfo, btnFavorite, setBtnFavorite, id);\n    const favBtn = (btnFavorite === 'isFavorite')\n      ? setBtnFavorite('isNotFavorite') : setBtnFavorite('isFavorite');\n    return favBtn;\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000${url}`);\n    setIsHidden(false);\n  };\n\n  const receitasIngMeas = () => {\n    const ingredients = ingredientMeasures(foodDetail, 'ingredientes');\n    const measures = ingredientMeasures(foodDetail, 'medidas');\n\n    const receitas = ingredients.map((ingredient, i) => `${ingredient} - ${measures[i]}`);\n    return receitas;\n  };\n\n  return (foodDetail.length === 0 && drinksDetails.length === 0) ? <Loading /> : (\n    <div className=\"recipe-details\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ strMealThumb }\n        alt={ strMeal }\n        width=\"320\"\n        height=\"240\"\n      />\n      <button\n        onClick={ handleShare }\n        type=\"button\"\n      >\n        <img data-testid=\"share-btn\" src={ Share } alt=\"btn share\" />\n      </button>\n      <p hidden={ isHidden }>Link copiado!</p>\n      <button\n        className=\"fav\"\n        onClick={ handleFavorite }\n        type=\"button\"\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ btnFavorite === 'isFavorite' ? BlackHeart : Heart }\n          alt=\"btn Fav\"\n        />\n      </button>\n      <p data-testid=\"recipe-title\">{strMeal}</p>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <section>\n        <p>Ingredients</p>\n        <div className=\"ingredients-measure\">\n          <ul>\n            {receitasIngMeas()\n              .map((ingredient, i) => (\n                <li\n                  data-testid={ `${i}-ingredient-name-and-measure` }\n                  key={ i }\n                >\n                  { ingredient }\n                </li>))}\n          </ul>\n        </div>\n      </section>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <iframe\n        data-testid=\"video\"\n        title=\"YouTube video player\"\n        width=\"320\"\n        height=\"240\"\n        src={ strYoutube ? strYoutube.replace('watch?v=', 'embed/') : 'loading' }\n        frameBorder=\"0\"\n        allow=\"accelerometer; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n      <Slider { ...settings }>\n        {drinksDetails\n          .map(({ strDrinkThumb, strDrink, strCategory: strDrikCategory }, i) => (\n            <section className=\"carrosel-sec\" key={ i } data-testid={ `${i}-recomendation-card` }>\n              <img\n                width=\"100\"\n                height=\"100\"\n                src={ strDrinkThumb }\n                alt={ strDrink }\n              />\n              <p>{strDrikCategory}</p>\n              <p data-testid={ `${i}-recomendation-title` }>{strDrink}</p>\n            </section>\n          ))}\n      </Slider>\n      <button\n        id={ id }\n        onClick={ handleRecipe }\n        className=\"iniciar\"\n        data-testid=\"start-recipe-btn\"\n        type=\"button\"\n      >\n        {btnState}\n      </button>\n    </div>\n  );\n};\n\nDetalheComidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default DetalheComidas;\n/* //testes */\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport copy from 'clipboard-copy';\nimport Loading from '../components/Loading';\nimport Share from '../images/shareIcon.svg';\nimport Heart from '../images/whiteHeartIcon.svg';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport BlackHeart from '../images/blackHeartIcon.svg';\n\nimport {\n  btnContinuar,\n  btnFavoritar,\n  ingredientMeasures,\n  changeLocalRecipe,\n  changeLocalFavorite,\n  getAPIdataID,\n  alimentosSugestions } from '../services/funcAuxDetails';\n\nconst DetalheBebidas = ({ match: { params: { id }, url }, history }) => {\n  const [drinkDetail, setDrinkDetail] = useState([]);\n  const [foodsDetails, setFoodsDetails] = useState([]);\n  const [btnState, setBtnState] = useState('Iniciar Receita');\n  const [btnFavorite, setBtnFavorite] = useState('isNotFavorite');\n  const [isHidden, setIsHidden] = useState(true);\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n  };\n\n  useEffect(() => {\n    alimentosSugestions(setFoodsDetails, 'meals');\n    getAPIdataID(id, setDrinkDetail, 'drink');\n\n    btnContinuar(id, setBtnState, 'cocktails');\n    btnFavoritar(id, setBtnFavorite);\n  }, []);\n\n  const {\n    strDrink,\n    strCategory,\n    strInstructions,\n    strDrinkThumb,\n    strAlcoholic } = drinkDetail;\n\n  const handleRecipe = () => {\n    changeLocalRecipe(id, 'cocktails', 'meals');\n    history.push(`/bebidas/${id}/in-progress`);\n  };\n\n  const favInfo = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n  };\n\n  const handleFavorite = () => {\n    changeLocalFavorite(favInfo, btnFavorite, setBtnFavorite, id);\n    const favBtn = (btnFavorite === 'isFavorite')\n      ? setBtnFavorite('isNotFavorite') : setBtnFavorite('isFavorite');\n    return favBtn;\n  };\n\n  const handleShare = () => {\n    copy(`http://localhost:3000${url}`);\n    setIsHidden(false);\n  };\n\n  const receitasIngMeas = () => {\n    const ingredients = ingredientMeasures(drinkDetail, 'ingredientes');\n    const measures = ingredientMeasures(drinkDetail, 'medidas');\n\n    const receitas = ingredients.map((ingredient, i) => `${ingredient} - ${measures[i]}`);\n    return receitas;\n  };\n\n  return (drinkDetail.length === 0 && foodsDetails.length === 0) ? <Loading /> : (\n    <div className=\"recipe-details\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ strDrinkThumb }\n        alt={ strDrink }\n        width=\"320\"\n        height=\"240\"\n      />\n      <button\n        onClick={ handleShare }\n        type=\"button\"\n      >\n        <img data-testid=\"share-btn\" src={ Share } alt=\"btn share\" />\n      </button>\n      <p hidden={ isHidden }>Link copiado!</p>\n      <button\n        onClick={ handleFavorite }\n        type=\"button\"\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ btnFavorite === 'isFavorite' ? BlackHeart : Heart }\n          alt=\"btn Fav\"\n        />\n      </button>\n      <p data-testid=\"recipe-title\">{strDrink}</p>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <p data-testid=\"recipe-category\">{strAlcoholic}</p>\n      <section>\n        <p>Ingredients</p>\n        <div className=\"ingredients-measure\">\n          <ul>\n            {receitasIngMeas()\n              .map((ingredient, i) => (\n                <li\n                  data-testid={ `${i}-ingredient-name-and-measure` }\n                  key={ i }\n                >\n                  { ingredient }\n                </li>))}\n          </ul>\n        </div>\n      </section>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <Slider { ...settings }>\n        {foodsDetails\n          .map(({ strMealThumb, strMeal, strCategory: strMealCategory }, i) => (\n            <section className=\"carrosel-sec\" key={ i } data-testid={ `${i}-recomendation-card` }>\n              <img\n                width=\"100\"\n                height=\"100\"\n                src={ strMealThumb }\n                alt={ strMeal }\n              />\n              <p>{strMealCategory}</p>\n              <p data-testid={ `${i}-recomendation-title` }>{strMeal}</p>\n            </section>\n          ))}\n      </Slider>\n      <button\n        id={ id }\n        onClick={ handleRecipe }\n        className=\"iniciar\"\n        data-testid=\"start-recipe-btn\"\n        type=\"button\"\n      >\n        {btnState}\n      </button>\n    </div>\n  );\n};\nDetalheBebidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default DetalheBebidas;\n\n// teste\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drink from '../images/drinkIcon.svg';\nimport meal from '../images/mealIcon.svg';\nimport explore from '../images/exploreIcon.svg';\n\nconst Footer = () => (\n  <div data-testid=\"footer\" className=\"footer\">\n    <Link to=\"/bebidas\">\n      <img src={ drink } alt=\"drink\" data-testid=\"drinks-bottom-btn\" />\n    </Link>\n    <Link to=\"/explorar\">\n      <img data-testid=\"explore-bottom-btn\" src={ explore } alt=\"explore\" />\n    </Link>\n    <Link to=\"/comidas\">\n      <img data-testid=\"food-bottom-btn\" src={ meal } alt=\"meal\" />\n    </Link>\n  </div>\n);\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { foodAPIRequest, cocktailsAPIRequest } from '../services/APIrequest';\n\nconst ExploreAliment = ({ tipo }) => {\n  const [getRandom, setGetRandom] = useState([]);\n\n  useEffect(() => {\n    const fetchAlimentoRandomico = async () => {\n      const foodRequest = await foodAPIRequest('random', '', '');\n      const cocktailsRequest = await cocktailsAPIRequest('random', '', '');\n      const alimentoRandomico = tipo === 'comidas' ? foodRequest : cocktailsRequest;\n      const idRandom = tipo === 'comidas'\n        ? alimentoRandomico[0].idMeal\n        : alimentoRandomico[0].idDrink;\n      setGetRandom(idRandom);\n    };\n    fetchAlimentoRandomico();\n  }, []);\n  return (\n    <>\n      <Link to={ `/explorar/${tipo}/ingredientes` }>\n        <button type=\"button\" data-testid=\"explore-by-ingredient\">\n          Por Ingredientes\n        </button>\n      </Link>\n      {tipo === 'comidas' ? (\n        <Link to=\"/explorar/comidas/area\">\n          <button type=\"button\" data-testid=\"explore-by-area\">\n            Por Local de Origem\n          </button>\n        </Link>\n      ) : (\n        console.log(tipo)\n      )}\n\n      <Link to={ `/${tipo}/${getRandom}` }>\n        <button type=\"button\" data-testid=\"explore-surprise\">\n          Me Surpreenda!\n        </button>\n      </Link>\n    </>\n  );\n};\n\nExploreAliment.propTypes = {\n  tipo: PropTypes.string,\n}.isRequired;\n\nexport default ExploreAliment;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\nimport { foodAPIRequest, cocktailsAPIRequest } from '../services/APIrequest';\n\nconst ExploreIng = ({ tipo }) => {\n  const [ingredientes, setIngredientes] = useState([]);\n\n  useEffect(() => {\n    const fetchIng = async () => {\n      const TWELVE = 12;\n      const ingFoodRequest = await foodAPIRequest('list', 'i=list');\n      const ingDrinkRequest = await cocktailsAPIRequest('list', 'i=list');\n      const ing = tipo === 'comidas' ? ingFoodRequest : ingDrinkRequest;\n      const twelveIng = ing ? ing.slice(0, TWELVE) : [];\n      setIngredientes(twelveIng);\n    };\n    fetchIng();\n  }, []);\n\n  const ingredientTipo = tipo === 'comidas' ? 'strIngredient' : 'strIngredient1';\n  const siteAlimento = tipo === 'comidas' ? 'themealdb' : 'thecocktaildb';\n\n  return ingredientes.lenght === 0 ? <Loading /> : (\n    <div className=\"create-card\">\n      {ingredientes.map((ingredient, index) => (\n        <div className=\"card\" data-testid={ `${index}-ingredient-card` } key={ index }>\n          <img\n            alt={ ingredient[ingredientTipo] }\n            data-testid={ `${index}-card-img` }\n            src={ `https://www.${siteAlimento}.com/images/ingredients/${ingredient[ingredientTipo]}-Small.png` }\n          />\n          <p data-testid={ `${index}-card-name` }>{ingredient[ingredientTipo]}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nExploreIng.propTypes = {\n  tipo: PropTypes.string,\n}.isRequired;\n\nexport default ExploreIng;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Profile() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const email = user ? user.email : 'fulano@trybe.com';\n  const cleanLocal = () => {\n    localStorage.clear();\n  };\n  return (\n    <div className=\"profile\">\n      <span className=\"email\" data-testid=\"profile-email\">{ email }</span>\n      <Link to=\"/receitas-feitas\">\n        <button\n          type=\"button\"\n          data-testid=\"profile-done-btn\"\n        >\n          Receitas Feitas\n\n        </button>\n      </Link>\n      <Link to=\"/receitas-favoritas\">\n        <button\n          type=\"button\"\n          data-testid=\"profile-favorite-btn\"\n        >\n          Receitas Favoritas\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ cleanLocal }\n        >\n          Sair\n\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Profile from '../components/Profile';\n\nconst Perfil = () => (\n  <div>\n    <Header pageName=\"Perfil\" hasLupa={ false } />\n    <div className=\"main\">\n      <Profile />\n    </div>\n    <Footer />\n  </div>\n);\n\nexport default Perfil;\n","import React from 'react';\n\nconst ButtonsRecipes = () => (\n  <div className=\"fav-recipes-btn\">\n    <button type=\"button\" data-testid=\"filter-by-all-btn\">All</button>\n    <button type=\"button\" data-testid=\"filter-by-food-btn\">Food</button>\n    <button type=\"button\" data-testid=\"filter-by-drink-btn\">Drink</button>\n  </div>\n);\n\nexport default ButtonsRecipes;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Share from '../images/shareIcon.svg';\nimport BlackHeart from '../images/blackHeartIcon.svg';\n\nconst CardFavorite = () => {\n  const [favs, setFavs] = useState([]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n      setFavs(JSON.parse(localStorage.getItem('favoriteRecipes')));\n    }\n  }, []);\n\n  return (\n    <div className=\"create-card\">\n      {favs.map((fav, index) => (\n        <div className=\"card\" key={ index }>\n          <img\n            src={ fav.image }\n            alt={ fav.name }\n            className=\"imageFood\"\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <p data-testid={ `${index}-horizontal-name` }>{fav.name}</p>\n          <p\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            {` ${fav.area} - ${fav.category}` }\n          </p>\n          <p data-testid={ `${index}-horizontal-top-text` }>{fav.alcoholicOrNot}</p>\n          <div className=\"fav-share\">\n            <button\n              type=\"button\"\n            >\n              <img\n                data-testid={ `${index}-horizontal-share-btn` }\n                src={ Share }\n                alt=\"btn share\"\n              />\n            </button>\n            <button\n              className=\"fav\"\n              type=\"button\"\n            >\n              <img\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ BlackHeart }\n                alt=\"btn Fav\"\n              />\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCardFavorite.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default CardFavorite;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\nimport MyContext from '../context/myContext';\nimport { foodAPIRequest, cocktailsAPIRequest } from '../services/APIrequest';\n\nconst Filters = ({ alimento }) => {\n  const { setBtnState,\n    btnState,\n    setDataFood,\n    setDataDrink } = useContext(MyContext);\n  const fifthFirst = alimento.slice(0, Number('5'));\n\n  const buttonAll = async () => {\n    const food = await foodAPIRequest();\n    setDataFood(food);\n    const drink = await cocktailsAPIRequest();\n    setDataDrink(drink);\n  };\n\n  const handleClick = ({ target }) => {\n    const { name } = target;\n    if (btnState.category !== name) {\n      setBtnState({\n        category: name,\n      });\n    } else {\n      buttonAll();\n    }\n  };\n\n  if (alimento.length === 0) return (<Loading />);\n\n  return (\n    <div className=\"filter-btn\">\n      <button\n        name=\"all\"\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={ buttonAll }\n      >\n        All\n      </button>\n      { fifthFirst.map(({ strCategory }, i) => (\n        <button\n          key={ i }\n          type=\"button\"\n          name={ strCategory }\n          onClick={ handleClick }\n          data-testid={ `${strCategory}-category-filter` }\n          value={ strCategory }\n        >\n          {strCategory}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  alimento: PropTypes.shape({\n    length: PropTypes.number,\n    slice: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default Filters;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Card = ({ alimento, tipo, chave }) => {\n  const image = alimento[`str${tipo}Thumb`];\n  const name = alimento[`str${tipo}`];\n  const idAlimento = alimento[`id${tipo}`];\n  const rota = tipo === 'Meal' ? `/comidas/${idAlimento}` : `/bebidas/${idAlimento}`;\n  return (\n    <Link\n      className=\"card\"\n      to={ {\n        pathname: rota,\n        state: { alimento },\n      } }\n      data-testid={ `${chave}-recipe-card` }\n    >\n      <img\n        alt={ name }\n        src={ image }\n        className=\"imageFood\"\n        data-testid={ `${chave}-card-img` }\n      />\n      <p data-testid={ `${chave}-card-name` }>{name}</p>\n    </Link>\n  );\n};\n\nCard.propTypes = {\n  alimento: PropTypes.shape({}),\n  tipo: PropTypes.string,\n}.isRequired;\n\nexport default Card;\n","import React from 'react';\nimport Card from '../components/Card';\n\nexport default function createCard(array = [], tipo) {\n  const twelve = 12;\n  if (array) {\n    const twelveFirst = array.slice(0, twelve);\n\n    return (\n      <div className=\"create-card\">\n        {twelveFirst.map((alimento, index) => (\n          <Card tipo={ tipo } key={ index } chave={ index } alimento={ alimento } />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from '../components/Filters';\nimport Loading from '../components/Loading';\nimport MyContext from '../context/myContext';\nimport { cocktailsAPIRequest } from '../services/APIrequest';\nimport createCard from '../services/createCard';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst TelaBebidas = ({ history }) => {\n  const {\n    dataDrink,\n    categoryDrink,\n    btnState,\n    setDataDrink,\n  } = useContext(MyContext);\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    const cocktailsRequest = async () => {\n      const drink = await cocktailsAPIRequest();\n      setDataDrink(drink);\n    };\n    cocktailsRequest();\n  }, [setDataDrink]);\n\n  useEffect(() => {\n    if (!firstRender.current) {\n      const { category } = btnState;\n      const ApiCategoryDrink = async () => {\n        const fetchCategoryDrink = await cocktailsAPIRequest('filter', `c=${category}`);\n        setDataDrink(fetchCategoryDrink);\n      };\n      ApiCategoryDrink();\n    } else {\n      firstRender.current = false;\n    }\n  }, [btnState, setDataDrink]);\n\n  return !dataDrink || dataDrink.length === 0 ? (\n    <Loading />\n  ) : (\n    <>\n      <Header hasLupa pageName=\"Bebidas\" />\n      <div className=\"main\">\n        <Filters alimento={ categoryDrink } />\n        { dataDrink.length === 1\n          ? history.push(`/bebidas/${dataDrink[0].idDrink}`)\n          : createCard(dataDrink, 'Drink') }\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nTelaBebidas.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default TelaBebidas;\n","import Login from './Login';\nimport DetalheComidas from './DetalheComidas';\nimport DetalheBebidas from './DetalheBebidas';\nimport Explorar from './Explorar';\nimport ExplorarComidas from './ExplorarComidas';\nimport ExplorarBebidas from './ExplorarBebidas';\nimport ExplorarComidasArea from './ExplorarComidasArea';\nimport IngredienteComidas from './IngredenteComidas';\nimport IngredienteBebidas from './IngredienteBebidas';\nimport Perfil from './Perfil';\nimport ReceitasFavoritas from './ReceitasFavoritas';\nimport ReceitasFeitas from './ReceitasFeitas';\nimport ReceitasProcessosComidas from './ReceitasProcessosComidas';\nimport ReceitasProcessosBebidas from './ReceitasProcessosBebidas';\nimport TelaBebidas from './TelaBebidas';\nimport TelaComidas from './TelaComidas';\n\nconst pages = {\n  Login,\n  DetalheComidas,\n  DetalheBebidas,\n  Explorar,\n  ExplorarComidas,\n  ExplorarBebidas,\n  ExplorarComidasArea,\n  IngredienteBebidas,\n  IngredienteComidas,\n  Perfil,\n  ReceitasFavoritas,\n  ReceitasFeitas,\n  ReceitasProcessosBebidas,\n  ReceitasProcessosComidas,\n  TelaBebidas,\n  TelaComidas,\n};\nexport default pages;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Explorar = () => (\n  <div>\n    <Header pageName=\"Explorar\" hasLupa={ false } />\n    <div className=\"explore\">\n      <Link to=\"/explorar/comidas\">\n        <button data-testid=\"explore-food\" type=\"button\"> Explorar Comidas</button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button data-testid=\"explore-drinks\" type=\"button\"> Explorar Bebidas </button>\n      </Link>\n    </div>\n    <Footer />\n  </div>\n);\n\nexport default Explorar;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ExploreAliment from '../components/ExploreAliment';\n\nconst ExplorarComidas = () => (\n  <>\n    <Header hasLupa={ false } pageName=\"Explorar Comidas\" />\n    <div className=\"explore\">\n      <ExploreAliment tipo=\"comidas\" />\n    </div>\n    <Footer />\n  </>\n);\n\nexport default ExplorarComidas;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ExploreAliment from '../components/ExploreAliment';\n\nconst ExplorarBebida = () => (\n  <>\n    <Header hasLupa={ false } pageName=\"Explorar Bebidas\" />\n    <div className=\"explore\">\n      <ExploreAliment tipo=\"bebidas\" />\n    </div>\n    <Footer />\n  </>\n);\n\nexport default ExplorarBebida;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst ExplorarComidasArea = () => (\n  <>\n    <Header pageName=\"Explorar Origem\" hasLupa />\n    <Footer />\n  </>\n);\n\nexport default ExplorarComidasArea;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ExploreIng from '../components/ExploreIng';\n\nconst IngredienteBebidas = () => (\n  <>\n    <Header pageName=\"Explorar Ingredientes\" hasLupa={ false } />\n    <div className=\"main\">\n      <ExploreIng tipo=\"bebidas\" />\n    </div>\n    <Footer />\n  </>\n);\n\nexport default IngredienteBebidas;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ExploreIng from '../components/ExploreIng';\n\nconst IngredienteComidas = () => (\n  <>\n    <Header pageName=\"Explorar Ingredientes\" hasLupa={ false } />\n    <div className=\"main\">\n      <ExploreIng tipo=\"comidas\" />\n    </div>\n    <Footer />\n  </>\n);\n\nexport default IngredienteComidas;\n","import React from 'react';\nimport ButtonsRecipes from '../components/ButtonsRecipes';\nimport CardFavorite from '../components/CardFavorite';\nimport Header from '../components/Header';\n\nconst ReceitasFavoritas = () => (\n  <div>\n    <Header hasLupa={ false } pageName=\"Receitas Favoritas\" />\n    <ButtonsRecipes />\n    <CardFavorite />\n  </div>\n);\n\nexport default ReceitasFavoritas;\n","import React from 'react';\nimport Header from '../components/Header';\n\nconst ReceitasFeitas = () => (<Header hasLupa={ false } pageName=\"Receitas Feitas\" />);\nexport default ReceitasFeitas;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport Loading from '../components/Loading';\nimport Share from '../images/shareIcon.svg';\nimport Heart from '../images/whiteHeartIcon.svg';\nimport BlackHeart from '../images/blackHeartIcon.svg';\nimport {\n  btnFavoritar,\n  ingredientMeasures,\n  changeLocalRecipe,\n  changeLocalFavorite,\n  getAPIdataID,\n  changeLocalCheckDrink,\n} from '../services/funcAuxDetails';\n\nconst ReceitasProcessosBebidas = ({ match: { params: { id } }, history }) => {\n  const [drinkDetail, setDrinkDetail] = useState([]);\n  const [btnFavorite, setBtnFavorite] = useState('isNotFavorite');\n  const [isHidden, setIsHidden] = useState(true);\n  const [checkedState, setCheckedState] = useState([]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('inProgressRecipes'))\n    && JSON.parse(localStorage.getItem('inProgressRecipes')).cocktails[id]) {\n      setCheckedState(JSON.parse(localStorage.getItem('inProgressRecipes'))\n        .cocktails[id]);\n    }\n    getAPIdataID(id, setDrinkDetail, 'drink');\n    btnFavoritar(id, setBtnFavorite);\n  }, []);\n\n  useEffect(() => {\n    changeLocalRecipe(id, 'cocktails', 'meals');\n  }, []);\n\n  const {\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n    strDrinkThumb,\n  } = drinkDetail;\n\n  const handleRecipe = () => {\n    changeLocalRecipe(id, 'cocktails', 'meals');\n    history.push('/receitas-feitas');\n  };\n\n  const favInfo = {\n    id,\n    type: 'bebida',\n    area: '',\n    image: strDrinkThumb,\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n  };\n\n  const handleFavorite = () => {\n    changeLocalFavorite(favInfo, btnFavorite, setBtnFavorite, id);\n    const favBtn = (btnFavorite === 'isFavorite')\n      ? setBtnFavorite('isNotFavorite') : setBtnFavorite('isFavorite');\n    return favBtn;\n  };\n\n  const handleShare = () => {\n    const url = `/bebidas/${id}`;\n    copy(`http://localhost:3000${url}`);\n    setIsHidden(false);\n  };\n\n  const receitasIngMeas = () => {\n    const ingredients = ingredientMeasures(drinkDetail, 'ingredientes');\n    const measures = ingredientMeasures(drinkDetail, 'medidas');\n\n    const receitas = ingredients.map((ingredient, i) => `${ingredient} - \n      ${measures[i] === undefined ? '' : measures[i]}`);\n    return receitas;\n  };\n\n  const changeCheckBox = ({ target: { name, checked } }) => {\n    setCheckedState(changeLocalCheckDrink(name, checked, id, checkedState));\n  };\n\n  return (drinkDetail.length === 0) ? <Loading /> : (\n    <div className=\"process\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ strDrinkThumb }\n        alt={ strDrink }\n        width=\"320\"\n        height=\"240\"\n      />\n      <button\n        onClick={ handleShare }\n        type=\"button\"\n      >\n        <img data-testid=\"share-btn\" src={ Share } alt=\"btn share\" />\n      </button>\n      <p hidden={ isHidden }>Link copiado!</p>\n      <button\n        className=\"fav\"\n        onClick={ handleFavorite }\n        type=\"button\"\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ btnFavorite === 'isFavorite' ? BlackHeart : Heart }\n          alt=\"btn Fav\"\n        />\n      </button>\n      <p data-testid=\"recipe-title\">{strDrink}</p>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <p data-testid=\"recipe-category\">{strAlcoholic}</p>\n      <div className=\"ingredients-measure\">\n        {receitasIngMeas()\n          .map((ingredient, i) => (\n            <label\n              htmlFor={ ingredient }\n              key={ i }\n              data-testid={ `${i}-ingredient-step` }\n              className={ checkedState.includes(ingredient) ? 'line-thru' : '' }\n            >\n              <input\n                onChange={ changeCheckBox }\n                name={ ingredient }\n                type=\"checkbox\"\n                checked={ checkedState.includes(ingredient) }\n              />\n              { ingredient }\n            </label>\n          ))}\n      </div>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <button\n        onClick={ handleRecipe }\n        className=\"iniciar\"\n        data-testid=\"finish-recipe-btn\"\n        type=\"button\"\n        disabled={ !receitasIngMeas().every((element) => checkedState.includes(element)) }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n};\n\nReceitasProcessosBebidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default ReceitasProcessosBebidas;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport Loading from '../components/Loading';\nimport Share from '../images/shareIcon.svg';\nimport Heart from '../images/whiteHeartIcon.svg';\nimport BlackHeart from '../images/blackHeartIcon.svg';\nimport {\n  btnFavoritar,\n  ingredientMeasures,\n  changeLocalRecipe,\n  changeLocalFavorite,\n  getAPIdataID,\n  changeLocalCheckFood,\n} from '../services/funcAuxDetails';\n\nconst ReceitasProcessosComidas = ({ match: { params: { id } }, history }) => {\n  const [foodDetail, setfoodDetail] = useState([]);\n  const [btnFavorite, setBtnFavorite] = useState('isNotFavorite');\n  const [isHidden, setIsHidden] = useState(true);\n  const [checkedState, setCheckedState] = useState([]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('inProgressRecipes'))\n      && JSON.parse(localStorage.getItem('inProgressRecipes')).meals[id]) {\n      setCheckedState(JSON.parse(localStorage.getItem('inProgressRecipes'))\n        .meals[id]);\n    }\n    getAPIdataID(id, setfoodDetail, 'food');\n    btnFavoritar(id, setBtnFavorite);\n  }, []);\n\n  useEffect(() => {\n    changeLocalRecipe(id, 'meals', 'cocktails');\n  }, []);\n\n  const {\n    strMeal,\n    strCategory,\n    strInstructions,\n    strMealThumb,\n    strArea,\n  } = foodDetail;\n\n  const handleRecipe = () => {\n    changeLocalRecipe(id, 'meals', 'cocktails');\n    history.push('/receitas-feitas');\n  };\n\n  const favInfo = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n\n  const handleFavorite = () => {\n    changeLocalFavorite(favInfo, btnFavorite, setBtnFavorite, id);\n  };\n\n  const handleShare = () => {\n    const url = `/comidas/${id}`;\n    copy(`http://localhost:3000${url}`);\n    setIsHidden(false);\n  };\n\n  const receitasIngMeas = () => {\n    const ingredients = ingredientMeasures(foodDetail, 'ingredientes');\n    const measures = ingredientMeasures(foodDetail, 'medidas');\n\n    const receitas = ingredients.map((ingredient, i) => `${ingredient} - ${measures[i]}`);\n    return receitas;\n  };\n\n  const changeCheckBox = ({ target: { name, checked } }) => {\n    setCheckedState(changeLocalCheckFood(name, checked, id, checkedState));\n  };\n\n  return (foodDetail.length === 0) ? <Loading /> : (\n    <div className=\"process\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ strMealThumb }\n        alt={ strMeal }\n        width=\"320\"\n        height=\"240\"\n      />\n      <button\n        onClick={ handleShare }\n        type=\"button\"\n      >\n        <img data-testid=\"share-btn\" src={ Share } alt=\"btn share\" />\n      </button>\n      <p hidden={ isHidden }>Link copiado!</p>\n      <button\n        className=\"fav\"\n        onClick={ handleFavorite }\n        type=\"button\"\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ btnFavorite === 'isFavorite' ? BlackHeart : Heart }\n          alt=\"btn Fav\"\n        />\n      </button>\n      <p data-testid=\"recipe-title\">{strMeal}</p>\n      <p data-testid=\"recipe-category\">{strCategory}</p>\n      <p>Ingredients</p>\n      <div className=\"ingredients-measure\">\n        {receitasIngMeas()\n          .map((ingredient, i) => (\n            <label\n              htmlFor={ ingredient }\n              key={ i }\n              data-testid={ `${i}-ingredient-step` }\n              className={ checkedState.includes(ingredient) ? 'line-thru' : '' }\n            >\n              <input\n                name={ ingredient }\n                className=\"inProcess\"\n                type=\"checkbox\"\n                onChange={ changeCheckBox }\n                checked={ checkedState.includes(ingredient) }\n              />\n              { ingredient }\n            </label>\n          ))}\n      </div>\n      <p data-testid=\"instructions\">{strInstructions}</p>\n      <button\n        onClick={ handleRecipe }\n        className=\"iniciar\"\n        data-testid=\"finish-recipe-btn\"\n        type=\"button\"\n        disabled={ !receitasIngMeas().every((element) => checkedState.includes(element)) }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n};\n\nReceitasProcessosComidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default ReceitasProcessosComidas;\n","import React, { useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/myContext';\nimport createCard from '../services/createCard';\nimport Filters from '../components/Filters';\nimport Loading from '../components/Loading';\nimport { foodAPIRequest } from '../services/APIrequest';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst TelaComidas = ({ history }) => {\n  const {\n    dataFood,\n    categoryFood,\n    btnState,\n    setDataFood,\n  } = useContext(MyContext);\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    const foodRequest = async () => {\n      const food = await foodAPIRequest();\n      setDataFood(food);\n    };\n    foodRequest();\n  }, [setDataFood]);\n\n  useEffect(() => {\n    if (!firstRender.current) {\n      const { category } = btnState;\n      const ApiCategoryFood = async () => {\n        const fetchCategoryFood = await foodAPIRequest('filter', `c=${category}`);\n        setDataFood(fetchCategoryFood);\n      };\n      ApiCategoryFood();\n    } else {\n      firstRender.current = false;\n    }\n  }, [btnState, setDataFood]);\n\n  return !dataFood || dataFood.length === 0 ? (\n    <Loading />\n  ) : (\n    <div>\n      <Header hasLupa pageName=\"Comidas\" />\n      <div className=\"main\">\n        <Filters alimento={ categoryFood } />\n        <div className=\"cards-list\">\n          { (dataFood.length === 1 && dataFood[0].idMeal !== '52968')\n            ? history.push(`/comidas/${dataFood[0].idMeal}`)\n            : createCard(dataFood, 'Meal') }\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nTelaComidas.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default TelaComidas;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Provider from './context/provider';\nimport pages from './pages/indexPages';\n\nfunction App() {\n  return (\n    <Provider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ pages.Login } />\n          <Route exact path=\"/perfil\" component={ pages.Perfil } />\n          <Route exact path=\"/explorar\" component={ pages.Explorar } />\n          <Route exact path=\"/comidas\" component={ pages.TelaComidas } />\n          <Route exact path=\"/bebidas\" component={ pages.TelaBebidas } />\n          <Route exact path=\"/receitas-feitas\" component={ pages.ReceitasFeitas } />\n          <Route exact path=\"/explorar/comidas\" component={ pages.ExplorarComidas } />\n          <Route exact path=\"/explorar/bebidas\" component={ pages.ExplorarBebidas } />\n          <Route exact path=\"/receitas-favoritas\" component={ pages.ReceitasFavoritas } />\n          <Route\n            exact\n            path=\"/comidas/:id\"\n            component={ pages.DetalheComidas }\n          />\n          <Route\n            exact\n            path=\"/bebidas/:id\"\n            component={ pages.DetalheBebidas }\n          />\n          <Route\n            exact\n            path=\"/explorar/comidas/area\"\n            component={ pages.ExplorarComidasArea }\n          />\n          <Route\n            exact\n            path=\"/comidas/:id/in-progress\"\n            component={ pages.ReceitasProcessosComidas }\n          />\n          <Route\n            path=\"/bebidas/:id/in-progress\"\n            component={ pages.ReceitasProcessosBebidas }\n          />\n          <Route\n            exact\n            path=\"/explorar/comidas/ingredientes\"\n            component={ pages.IngredienteComidas }\n          />\n          <Route\n            exact\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ pages.IngredienteBebidas }\n          />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}